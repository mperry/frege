--- This is an undocumented module
module tests.qc.Targets where

import Compiler.types.Targets as T
import Test.QuickCheck public

{-- For a valid target string, the result of showing a decoded
    target should be the original string. -} 
p_sts ∷ Property
p_sts = forAll (elements ["0.1", "x.y", "1.7", 
                          "-5.3f", "1.8.23", "12345.67890" ]) 
                stringit
    where
        stringit ∷ String → Bool
        stringit s = case Target.decode s of
            Just t  → s == show t
            Nothing → true

{-- If we have a Target and we show it and decode it again, we get
    the same Target back -}
p_tst ∷ Property
p_tst = property tst
    where
        tst ∷ (Int,Int) → Bool
        tst (a,b) = case (Target.decode . show) t of
                Just t' → t == t'
                Nothing → false
            where t = Target{major=abs a, minor=abs b}

