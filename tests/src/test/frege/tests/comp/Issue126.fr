--- Example code for Issue 126
module tests.comp.Issue126 where

import frege.Prelude hiding(Byte)
-- import Data.List

data Byyte = pure native "byte" where
    pure native byte "(byte)" :: Int -> Byyte
    --- this gives the 'Int' corresponding to the *signed* interpretation of the 'Byte'
    pure native signed "(int)"  :: Byyte -> Int
    --- this gives the 'Int' corresponding to the *unsigned* interpretation of the 'Byte'
    unsigned b = signed b Int..&. 0xFF
    hashCode  = Byyte.unsigned 

instance Eq Byyte where
    -- hashCode  = Byte.unsigned
    pure native == :: Byyte -> Byyte -> Bool
    pure native != :: Byyte -> Byyte -> Bool

main = println (hashCode (Byyte.byte 42))